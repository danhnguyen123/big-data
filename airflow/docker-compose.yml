version: '3.9'
x-airflow-common:
  &airflow-common
  # In order to add custom dependencies or upgrade provider packages you can use your extended image.
  # Comment the image line, place your Dockerfile in the directory where you placed the docker-compose.yaml
  # and uncomment the "build" line below, Then run docker-compose build to build the images.
  # image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.1.2}
  build:
    context: .
    dockerfile: Dockerfile
  env_file: .env
  extra_hosts:
    - "host.docker.internal:host-gateway"
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_URL}
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${AIRFLOW_DB_URL}
    AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW_BROKER_URL}
    AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
    AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
    AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW_PLUGINS_FOLDER: '/opt/airflow/plugins'
    AIRFLOW_ROOT_FOLDER: '/opt/airflow'
  volumes:
    - .:/opt/airflow

  networks:
    - bds-network

services:
  airflow-database:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  # airflow-init:
  #   << : *airflow-common
  #   container_name: airflow-init
  #   entrypoint: /bin/bash
  #   command:
  #     - -c
  #     - airflow users list || ( airflow db init &&
  #       airflow users create
  #         --role Admin
  #         --username airflow
  #         --password airflow
  #         --email airflow@airflow.com
  #         --firstname airflow
  #         --lastname airflow )
  #   restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    # command: airflow db init && airflow webserver
    ports:
      - ${AIRFLOW_PORT}:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-worker:
    <<: *airflow-common
    command: airflow celery worker
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-flower:
    <<: *airflow-common
    command: celery flower
    ports:
      - 5555:5555
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    # depends_on:
    #   <<: *airflow-common-depends-on
    #   airflow-init:
    #     condition: service_completed_successfully

networks:
  bds-network:
    external: true